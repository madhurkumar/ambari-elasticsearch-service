<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at
       http://www.apache.org/licenses/LICENSE-2.0
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<configuration supports_final="true">

    <!-- Cluster -->
    <property>
        <name>elasticsearch_yml_template</name>
        <display-name>Elasticsearch yml template</display-name>
        <value>
# ======================== Elasticsearch Configuration =========================
#
# NOTE: Elasticsearch comes with reasonable defaults for most settings.
#       Before you set out to tweak and tune the configuration, make sure you
#       understand what are you trying to accomplish and the consequences.
#
# The primary way of configuring a node is via this file. This template lists
# the most important settings you may want to configure for a production cluster.

# ---------------------------------- Cluster -----------------------------------
# Use a descriptive name for your cluster:
cluster.name: es_cluster_01

# ------------------------------------ Node ------------------------------------
# Use a descriptive name for the node:
node.name: {{hostname}}

# Add custom attributes to the node:
node.attr.rack: rack01

node.master: true
node.data: true
node.ingest: true

# ----------------------------------- Paths ------------------------------------
# Path to directory where to store the data (separate multiple locations by comma):
path.data: {{elastic_base_dir}}/data

# Path to log files:
path.logs: {{elastic_base_dir}}/logs

# ----------------------------------- Memory -----------------------------------
# Lock the memory on startup:# Elasticsearch expects that boolean values to be true or false and will generate an error if you use True or False.
bootstrap.memory_lock: true

# ---------------------------------- Network -----------------------------------
# Set the bind address to a specific IP (IPv4 or IPv6):
network.host: {{hostname}}

# Set a custom port for HTTP:
http.port: 9200

# --------------------------------- Discovery ----------------------------------
# Pass an initial list of hosts to perform discovery when new node is started:
# The default list of hosts is ["127.0.0.1", "[::1]"]
#discovery.zen.ping.unicast.hosts: {{discovery_zen_ping_unicast_hosts}}

# Prevent the "split brain" by configuring the majority of nodes (total number of nodes / 2 + 1):
discovery.zen.minimum_master_nodes: 1

# ---------------------------------- Gateway -----------------------------------
# Block initial recovery after a full cluster restart until N nodes are started:
gateway.recover_after_nodes: 1

# ---------------------------------- Various -----------------------------------
# Disable starting multiple nodes on a single system:
node.max_local_storage_nodes: 1

# Require explicit names when deleting indices:
# Lock the memory on startup:# Elasticsearch expects that boolean values to be true or false and will generate an error if you use True or False.
action.destructive_requires_name: true

xpack.security.enabled: false
xpack.ssl.key: {{elastic_base_dir}}/config/x-pack/{{hostname}}/{{hostname}}.key
xpack.ssl.certificate: {{elastic_base_dir}}/config/x-pack/{{hostname}}/{{hostname}}.crt
xpack.ssl.certificate_authorities:  {{elastic_base_dir}}/config/x-pack/ca/ca.crt
xpack.security.transport.ssl.enabled: false
xpack.security.http.ssl.enabled: false
xpack:
    security:
        authc:
            realms:
                native1:
                    type: native
                    order: 0
                ad1:
                    type: active_directory
                    order: 1
                    domain_name: example.com
                    url: ldap://example.com:port
                    files:
                        role_mapping:  {{elastic_base_dir}}/config/x-pack/role_mapping.yml
                    unmapped_groups_as_roles: false
    </value>
    <description>Template for Elasticsearch yml</description>
    <value-attributes>
        <type>content</type>
    </value-attributes>
    </property>
    <property>
        <name>xpack_security_ssl_certs_template</name>
        <display-name>Template for instances.yml</display-name>
        <value>
instances:
- name: {{hostname}}
        </value>
        <description>Template for instances.yml</description>
        <value-attributes>
            <type>content</type>
        </value-attributes>
        <on-ambari-upgrade add="true"/>
    </property>
    <property>
        <name>security_role_mapping_template</name>
        <display-name>Template for role_mapping.yml</display-name>
        <value>
# Role mapping configuration file which has elasticsearch roles as keys
# that map to one or more user or group distinguished names

#roleA: this is an elasticsearch role
# - groupA-DN this is a group distinguished name
# - groupB-DN
# - user1-DN this is the full user distinguished name

#power_user:
# - "cn=admins,dc=example,dc=com"
#user:
# - "cn=users,dc=example,dc=com"
# - "cn=admins,dc=example,dc=com"
# - "cn=John Doe,cn=other users,dc=example,dc=com"
        </value>
        <description>Template for role_mapping.yml</description>
        <value-attributes>
            <type>content</type>
        </value-attributes>
        <on-ambari-upgrade add="true"/>
    </property>
    <property>
        <name>security_roles_template</name>
        <display-name>Template for roles.yml</display-name>
        <value>
# The default roles file is empty as the preferred method of defining roles is
# through the API/UI. File based roles are useful in error scenarios when the
# API based roles may not be available.
        </value>
        <description>Template for roles.yml</description>
        <value-attributes>
            <type>content</type>
        </value-attributes>
        <on-ambari-upgrade add="true"/>
    </property>
    <property>
        <name>security_roles_template</name>
        <display-name>Template for roles.yml</display-name>
        <value>
            # The default roles file is empty as the preferred method of defining roles is
            # through the API/UI. File based roles are useful in error scenarios when the
            # API based roles may not be available.
        </value>
        <description>Template for roles.yml</description>
        <value-attributes>
            <type>content</type>
        </value-attributes>
        <on-ambari-upgrade add="true"/>
    </property>
</configuration>
